name: Deploy Full Stack to EC2 - Optimized Build

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # --- 1. 프론트엔드 빌드 (GitHub Actions Runner에서 실행) ---
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Frontend Dependencies & Build
      run: |
        cd frontend-pwa
        npm install
        npm run build

    # --- 2. 빌드된 파일 압축 ---
    - name: Compress build files
      run: |
        cd frontend-pwa
        tar -czf ../frontend-build.tar.gz -C dist .
        cd ..
        ls -lh frontend-build.tar.gz

    # --- 3. 압축 파일만 별도 디렉토리로 이동 후 전송 ---
    - name: Prepare for transfer
      run: |
        mkdir -p transfer
        mv frontend-build.tar.gz transfer/
        ls -la transfer/

    - name: Copy build files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "transfer/frontend-build.tar.gz"
        target: "~/nfc-hospital"
        strip_components: 1

    # --- 3. EC2 서버에서 압축 해제 및 서버 재시작 ---
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e # 명령어 실패 시 즉시 중단

          # --- 경로 변수 정의 ---
          PROJECT_DIR="$HOME/nfc-hospital"
          BACKEND_DIR="$PROJECT_DIR/backend"
          FRONTEND_BUILD_PATH="/var/www/nfc-hospital"
          DJANGO_DIR="$BACKEND_DIR/nfc_hospital_system"
          VENV_PYTHON="$BACKEND_DIR/venv/bin/python"
          VENV_PIP="$BACKEND_DIR/venv/bin/pip"

          # --- 1. 코드 업데이트 및 백엔드 의존성 설치 ---
          echo ">>> 1. Git 리포지토리 업데이트 및 백엔드 의존성 설치"
          cd $PROJECT_DIR
          git reset --hard HEAD
          git pull origin main
          cd $DJANGO_DIR
          $VENV_PIP install -r requirements.txt

          # --- 2. 프론트엔드 빌드 파일 배포 ---
          echo ">>> 2. 프론트엔드 빌드 파일 압축 해제 및 복사"
          sudo mkdir -p $FRONTEND_BUILD_PATH
          # 권한 먼저 설정
          sudo chown -R $USER:$USER $FRONTEND_BUILD_PATH
          # 이전 빌드 파일 삭제 후 압축 해제
          sudo rm -rf $FRONTEND_BUILD_PATH/*
          tar -xzf $PROJECT_DIR/frontend-build.tar.gz -C $FRONTEND_BUILD_PATH/
          # 압축 해제 후 웹서버 권한으로 변경
          sudo chown -R www-data:www-data $FRONTEND_BUILD_PATH
          # 압축 파일 삭제 (정리)
          rm -f $PROJECT_DIR/frontend-build.tar.gz

          # --- 3. 로그 디렉터리 및 파일 생성 ---
          echo ">>> 3. Django 로그 디렉터리 및 파일 생성"
          sudo mkdir -p /var/log/django
          sudo touch /var/log/django/error.log /var/log/django/nfc_hospital.log
          sudo chown -R $USER:$USER /var/log/django

          # --- 4. Django 애플리케이션 준비 ---
          echo ">>> 4. Django 마이그레이션 및 정적 파일 수집"
          cd $DJANGO_DIR
          $VENV_PYTHON manage.py collectstatic --noinput --settings=nfc_hospital_system.settings.production
          $VENV_PYTHON manage.py migrate --noinput --settings=nfc_hospital_system.settings.production

          # --- 5. 서버 시작 스크립트 생성 ---
          echo ">>> 5. 서버 시작 스크립트 생성"
          cat > $PROJECT_DIR/start_server.sh <<'EOF'
          #!/bin/bash
          # 서버 시작 스크립트 - 환경 변수를 확실하게 로드하고 Daphne 실행

          # .env 파일이 있는 Django 프로젝트 폴더로 이동
          cd ~/nfc-hospital/backend/nfc_hospital_system

          # .env 파일이 존재하면, 파일의 내용을 현재 셸 세션의 환경 변수로 로드
          if [ -f .env ]; then
            export $(grep -v '^#' .env | xargs)
          fi

          # Django 설정 모듈 명시적 설정
          export DJANGO_SETTINGS_MODULE='nfc_hospital_system.settings.production'
          export DJANGO_ENVIRONMENT='production'

          # Daphne 서버 실행
          ~/nfc-hospital/backend/venv/bin/daphne -b 127.0.0.1 -p 8000 nfc_hospital_system.asgi:application
          EOF

          # 생성된 스크립트에 실행 권한 부여
          chmod +x $PROJECT_DIR/start_server.sh

          # --- 6. 백엔드 서버 재시작 ---
          echo ">>> 6. 백엔드 Daphne 서버 재시작"
          screen -S django -X quit || true
          sleep 2
          screen -dmS django $PROJECT_DIR/start_server.sh

          # --- 7. Nginx 설정 및 재시작 ---
          echo ">>> 7. Nginx 설정 및 재시작"
          sudo tee /etc/nginx/sites-available/nfc-hospital > /dev/null <<'EOF'
          server {
              listen 80;
              server_name 15.164.94.194;

              location / {
                  root /var/www/nfc-hospital;
                  try_files $uri /index.html;
              }

              location ~ ^/(api|admin|ws|static)/ {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_http_version 1.1;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_set_header Authorization $http_authorization;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_read_timeout 300s;
              }
          }
          EOF
          sudo ln -sf /etc/nginx/sites-available/nfc-hospital /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t
          sudo systemctl restart nginx

          # --- 8. 최종 검증 ---
          echo ">>> 8. 배포 상태 검증"
          sleep 5
          if screen -list | grep -q "django"; then
              echo "✅ 백엔드 서버가 정상적으로 실행 중입니다."
          else
              echo "❌ ERROR: 백엔드 서버가 시작되지 못했습니다."
              exit 1
          fi
          echo "✅ 배포가 성공적으로 완료되었습니다!"