name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy Backend to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # --- (명령어 오류 수정) 최종 배포 스크립트 ---

          # 경로 변수 정의
          PROJECT_DIR="$HOME/nfc-hospital"
          BACKEND_DIR="$PROJECT_DIR/backend"
          VENV_GUNICORN="$BACKEND_DIR/venv/bin/gunicorn"
          VENV_PIP="$BACKEND_DIR/venv/bin/pip"
          DJANGO_DIR="$BACKEND_DIR/nfc_hospital_system"
          PID_FILE="$BACKEND_DIR/gunicorn.pid"
          GUNICORN_LOG_FILE="$BACKEND_DIR/gunicorn.error.log"

          # 1. 코드 업데이트
          echo ">>> 1. Pulling latest code..."
          cd $PROJECT_DIR
          git pull origin main
          
          # 2. 파이썬 의존성 설치
          echo ">>> 2. Installing Python dependencies..."
          $VENV_PIP install -r $DJANGO_DIR/requirements.txt
          
          # 3. 이전 서버 안전하게 종료
          echo ">>> 3. Safely stopping the old server..."
          if [ -f $PID_FILE ]; then
            kill $(cat $PID_FILE)
            rm -f $PID_FILE
          else
            pkill -f "^$VENV_GUNICORN" || true
          fi
          sleep 2
          
          # 4. 새 서버 시작 (올바른 Gunicorn 실행 방식으로 수정)
          echo ">>> 4. Starting new server with Gunicorn..."
          rm -f $GUNICORN_LOG_FILE
          cd $DJANGO_DIR

          # --settings 옵션 대신 DJANGO_SETTINGS_MODULE 환경변수를 설정하는 것이 올바른 방법입니다.
          screen -dmS django bash -c "export DJANGO_SETTINGS_MODULE='nfc_hospital_system.settings.development'; \
            exec $VENV_GUNICORN \
              --workers 3 \
              --bind 0.0.0.0:8000 \
              --pid $PID_FILE \
              --log-level=info \
              --error-logfile $GUNICORN_LOG_FILE \
              nfc_hospital_system.wsgi:application"
          
          # 5. 서버 상태 검증 및 실패 시 로그 출력
          echo ">>> 5. Verifying server status..."
          sleep 5
          
          if screen -list | grep -q "django"; then
            echo "✅ Screen session 'django' is running."
          else
            echo "❌ ERROR: Screen session failed to start. This is likely a Gunicorn/Django error."
            if [ -f $GUNICORN_LOG_FILE ]; then
              echo "--- Gunicorn Error Log ---"
              cat $GUNICORN_LOG_FILE
            else
              echo "Gunicorn log file not found. The error is very early in the process."
            fi
            exit 1
          fi
          
          if curl -f http://localhost:8000/ > /dev/null 2>&1; then
              echo "✅ Success: Django server is up and running!"
          else
              echo "❌ ERROR: Django server is not responding."
              echo "--- Displaying Gunicorn error log for debugging ---"
              cat $GUNICORN_LOG_FILE
              exit 1
          fi
