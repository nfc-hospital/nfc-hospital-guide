# Generated by Django 4.2.7 on 2025-07-19 09:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="사용자 ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=255, unique=True, verbose_name="이메일"),
                ),
                (
                    "pw_hash",
                    models.TextField(
                        blank=True, help_text="Scrypt 암호화", verbose_name="비밀번호 해시"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super", "최고 관리자"),
                            ("dept", "진료과 관리자"),
                            ("staff", "직원"),
                            ("patient", "환자"),
                            ("doctor", "의사"),
                        ],
                        default="patient",
                        max_length=10,
                        verbose_name="역할",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="이름")),
                (
                    "phoneNumber",
                    models.CharField(
                        help_text="암호화 저장", max_length=20, verbose_name="전화번호"
                    ),
                ),
                ("birthDate", models.DateField(verbose_name="생년월일")),
                (
                    "patientId",
                    models.CharField(
                        blank=True,
                        help_text="환자 전용",
                        max_length=20,
                        null=True,
                        verbose_name="환자 번호",
                    ),
                ),
                (
                    "emergencyContact",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="응급 연락처"
                    ),
                ),
                (
                    "allergies",
                    models.JSONField(blank=True, default=list, verbose_name="알레르기 정보"),
                ),
                (
                    "lastLoginAt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마지막 로그인 시간"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="생성일시"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성 상태")),
                ("is_staff", models.BooleanField(default=False, verbose_name="스태프 권한")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자",
                "verbose_name_plural": "사용자 목록",
                "db_table": "users",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_last4",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="전화번호 뒤 4자리"
                    ),
                ),
                (
                    "birth_date",
                    models.CharField(
                        blank=True, max_length=6, null=True, verbose_name="생년월일 6자리"
                    ),
                ),
                (
                    "login_type",
                    models.CharField(
                        choices=[
                            ("simple", "간편 로그인"),
                            ("kakao", "카카오 로그인"),
                            ("pass", "PASS 인증"),
                            ("sms", "SMS 인증"),
                            ("device", "디바이스 자동 로그인"),
                        ],
                        max_length=10,
                        verbose_name="로그인 유형",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "성공"),
                            ("failed", "실패"),
                            ("blocked", "차단됨"),
                        ],
                        max_length=10,
                        verbose_name="시도 결과",
                    ),
                ),
                (
                    "device_uuid",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="디바이스 UUID"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP 주소")),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="실패 사유"
                    ),
                ),
                (
                    "attempted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="시도 시간"),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        blank=True,
                        db_column="user_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="login_attempts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="로그인 사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "로그인 시도",
                "verbose_name_plural": "로그인 시도 기록",
                "db_table": "auth_login_attempts",
                "ordering": ["-attempted_at"],
                "indexes": [
                    models.Index(
                        fields=["ip_address", "attempted_at"],
                        name="auth_login__ip_addr_0fb781_idx",
                    ),
                    models.Index(
                        fields=["phone_last4", "attempted_at"],
                        name="auth_login__phone_l_ae1e87_idx",
                    ),
                    models.Index(
                        fields=["device_uuid", "status"],
                        name="auth_login__device__25056d_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DeviceToken",
            fields=[
                (
                    "device_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="토큰 ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        help_text="디바이스 고유 식별 토큰",
                        max_length=255,
                        unique=True,
                        verbose_name="디바이스 토큰",
                    ),
                ),
                (
                    "device_uuid",
                    models.CharField(
                        help_text="디바이스 고유 식별자",
                        max_length=255,
                        unique=True,
                        verbose_name="디바이스 UUID",
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("android", "Android"),
                            ("ios", "iOS"),
                            ("web", "Web PWA"),
                        ],
                        default="web",
                        max_length=10,
                        verbose_name="디바이스 타입",
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        help_text="예: Samsung Galaxy S22, iPhone 16",
                        max_length=100,
                        null=True,
                        verbose_name="디바이스 이름",
                    ),
                ),
                (
                    "device_model",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="디바이스 모델"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="브라우저 또는 앱 정보",
                        null=True,
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "app_version",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="앱 버전"
                    ),
                ),
                (
                    "fcm_token",
                    models.TextField(
                        blank=True,
                        help_text="Firebase Cloud Messaging 토큰 (푸시 알림용)",
                        null=True,
                        verbose_name="FCM 토큰",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="비활성화된 토큰은 자동 로그인이 불가능",
                        verbose_name="활성 상태",
                    ),
                ),
                (
                    "is_trusted",
                    models.BooleanField(
                        default=False,
                        help_text="신뢰하는 디바이스는 추가 인증 없이 로그인 가능",
                        verbose_name="신뢰할 수 있는 디바이스",
                    ),
                ),
                (
                    "last_ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="마지막 IP 주소"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "last_login_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="마지막 로그인 시간"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="설정된 경우 해당 시간 이후 자동 로그인 불가",
                        null=True,
                        verbose_name="만료일시",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="device_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "디바이스 토큰",
                "verbose_name_plural": "디바이스 토큰 목록",
                "db_table": "auth_device_tokens",
                "ordering": ["-last_login_at"],
                "indexes": [
                    models.Index(
                        fields=["user_id", "is_active"],
                        name="auth_device_user_id_ea16f5_idx",
                    ),
                    models.Index(fields=["token"], name="auth_device_token_755da8_idx"),
                    models.Index(
                        fields=["device_uuid"], name="auth_device_device__efe499_idx"
                    ),
                    models.Index(
                        fields=["user_id", "device_type", "is_active"],
                        name="auth_device_user_id_6f08da_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["phoneNumber"], name="users_phoneNu_e84f73_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["role", "is_active"], name="users_role_a8f2ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["patientId"], name="users_patient_c29c59_idx"),
        ),
    ]
