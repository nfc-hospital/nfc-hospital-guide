================================================================================
NFC 병원 안내 시스템 - 상세 현황 분석 및 1개월 실행 계획
================================================================================
작성일: 2025년 1월 9일
작성자: Claude Code 분석팀
대상: 한이음 공모전 개발팀 (3명)
================================================================================

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📌 프로젝트 최종 목표
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

"기존 병원 시스템을 전혀 건드리지 않으면서, NFC 태깅 한 번으로 환자에게 
개인화된 병원 검사 안내를 제공하고, 간호사의 대기열 관리 업무를 지능화하는 시스템"

핵심 가치:
1. 환자: 병원 내 동선 혼란 해결, 실시간 대기 정보 제공
2. 간호사: 반복적인 안내 업무 감소, 효율적인 대기열 관리
3. 병원: 저비용 도입, 기존 시스템 유지, 운영 효율성 증대

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔍 현재 상태 총평
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

전체 완성도: 78% (프로토타입 단계)

┌─────────────────────────────────────────────────────────────────────────┐
│ 구분          │ 완성도 │ 상태                                           │
├─────────────────────────────────────────────────────────────────────────┤
│ 백엔드 API    │  85%   │ 핵심 기능 완성, 고급 기능 부족                │
│ 프론트엔드    │  80%   │ 사용자 흐름 완성, 관리 기능 부족              │
│ NFC 연동      │  70%   │ 시뮬레이션 완성, 실제 하드웨어 미테스트       │
│ 데이터베이스  │  90%   │ 스키마 완성, 시드 데이터 보강 필요            │
│ 인증/권한     │  95%   │ 완전 구현                                     │
│ 실시간 통신   │  60%   │ 기본 구현, 안정성 개선 필요                   │
│ AI/LSTM       │  20%   │ 프론트엔드 목업만 존재                        │
│ 가상 EMR      │  30%   │ 구조만 있고 동기화 로직 미구현                │
└─────────────────────────────────────────────────────────────────────────┘

【강점】
✅ Django 백엔드 아키텍처가 매우 체계적
✅ 9단계 환자 여정 상태 관리 완성
✅ NFC 태그 스캔 → 경로 안내 플로우 구현
✅ JWT 기반 RBAC 권한 시스템 완벽
✅ Zustand 기반 프론트엔드 상태 관리 우수

【약점】
❌ 가상 EMR 동기화 로직 미구현
❌ WebSocket 재연결/에러 처리 미흡
❌ 관리자 대시보드 데이터 연동 부족
❌ LSTM 백엔드 AI 모델 없음
❌ 챗봇 의료 정보 처리 미완성

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 기능별 상세 분석
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
1. 환자 인증 시스템
================================================================================
현재 상태: ✅ 95% 완성

【구현 완료】
• 간편 로그인 (전화번호 뒷4자리 + 생년월일) ✅
• JWT 토큰 발급/갱신 메커니즘 ✅
• 디바이스 UUID 기반 자동 로그인 ✅
• 카카오 OAuth 연동 구조 (프론트엔드) ✅
• 로그인 시도 로깅 및 보안 ✅

【미구현】
• SMS 인증번호 발송
• PASS 앱 본인인증
• 카카오 OAuth 백엔드 완성

【결정 필요】
❓ 카카오/SMS/PASS 중 어떤 것을 우선 구현할지?
❓ 간편 로그인만으로 충분한지?

【추천】
✅ 현재 간편 로그인만으로도 충분
✅ 추가 인증 방식은 시간 부족으로 제외
✅ 보안은 현재 수준으로 충분 (데모용)

================================================================================
2. NFC 태그 스캔 및 위치 인식
================================================================================
현재 상태: ✅ 85% 완성

【구현 완료】
• Web NFC API 기반 태그 읽기 로직 ✅
• Mock NFC Panel로 개발/테스트 환경 ✅
• 태그 UID → 위치 정보 매핑 ✅
• 공개/로그인 사용자 구분 처리 ✅
• 태그 스캔 로그 기록 ✅
• 30개 샘플 태그 데이터 준비 ✅

【미구현】
• 실제 NFC 하드웨어 테스트
• QR 코드 백업 기능
• 오프라인 모드 지원

【결정 필요】
❓ QR 코드 백업 기능 구현 여부?
❓ 실제 NFC 태그 구매 여부?

【추천】
✅ Mock NFC로 시연 충분
✅ QR 코드는 시간 있으면 추가
⚠️ 실제 태그 1-2개는 구매 권장 (시연용)

================================================================================
3. 환자 여정 상태 관리 (9단계)
================================================================================
현재 상태: ✅ 90% 완성

【구현 완료】
• PatientJourneyService 중앙 관리 클래스 ✅
• 9단계 상태 전이 로직 완성 ✅
• Queue와 PatientState 양방향 동기화 ✅
• 액션 기반 상태 변경 시스템 ✅
• StateTransition 이력 관리 ✅

【9단계 상태】
1. UNREGISTERED - 병원 도착 전
2. ARRIVED - 병원 도착, 미접수
3. REGISTERED - 접수 완료
4. WAITING - 대기 중
5. CALLED - 호출됨
6. ONGOING - 검사/진료 중
7. COMPLETED - 검사/진료 완료
8. PAYMENT - 수납 대기/완료
9. FINISHED - 모든 과정 완료

【미구현】
• 일부 엣지 케이스 처리
• 상태 롤백 메커니즘
• 복잡한 분기 처리

【결정 필요】
❓ 9단계가 너무 복잡한지?
❓ 어떤 상태를 통합/제거할지?

【추천】
⚠️ 5-6단계로 단순화 고려
  - ARRIVED + REGISTERED → CHECK_IN
  - CALLED + ONGOING → IN_PROGRESS
  - PAYMENT + FINISHED → COMPLETED

================================================================================
4. 대기열 관리 시스템
================================================================================
현재 상태: ✅ 80% 완성

【구현 완료】
• Queue 모델 중심 단일 진실 원천 (SSOT) ✅
• 환자 호출 API (/api/v1/queue/medical/call-patient/) ✅
• 순번 변경 API (/api/v1/queue/dashboard/{queueId}) ✅
• 대기시간 계산 로직 ✅
• QueueStatusLog 상태 변경 이력 ✅
• 검사실별 독립 대기열 ✅

【미구현】
• 복잡한 우선순위 처리 (응급/VIP)
• 대기열 병합/분할
• 예외 상황 자동 처리

【결정 필요】
❓ 검사실별 대기열 vs 통합 대기열?
❓ 우선순위 시스템 필요 여부?

【추천】
✅ 현재 검사실별 대기열 구조 유지
✅ 단순 FIFO만 구현 (우선순위 제외)
✅ 예외는 수동 처리로 충분

================================================================================
5. 실시간 업데이트 (WebSocket)
================================================================================
현재 상태: ⚠️ 60% 완성

【구현 완료】
• Django Channels 설정 ✅
• 기본 대기열 업데이트 채널 ✅
• 프론트엔드 useWebSocket 훅 ✅
• 환자별 개인 채널 (patient_{user_id}) ✅

【미구현】
• WebSocket 재연결 로직 ❌
• 연결 끊김 에러 처리 ❌
• 메시지 큐잉/재전송 ❌
• 하트비트/핑퐁 ❌

【결정 필요】
❓ WebSocket vs SSE vs Polling?
❓ 불안정할 경우 대안?

【추천】
⚠️ WebSocket 기본 유지
⚠️ 불안정시 10초 Polling으로 폴백
⚠️ 재연결 로직은 필수 구현

================================================================================
6. 실내 지도 및 경로 안내
================================================================================
현재 상태: ⚠️ 70% 완성

【구현 완료】
• SVG 기반 지도 시스템 (3개 건물, 5개 층) ✅
• A* 알고리즘 경로 탐색 구현 ✅
• 현재 위치 마커 표시 ✅
• 목적지 하이라이트 ✅
• 줌/팬 기능 ✅

【미구현】
• 실시간 경로 재계산
• 접근성 경로 (휠체어/엘리베이터)
• 3D/AR 뷰
• 음성 경로 안내

【결정 필요】
❓ 2D 지도면 충분한지?
❓ 접근성 경로 필요성?

【추천】
✅ 2D SVG로 충분
❌ AR은 과도함 (제외)
⚠️ 접근성은 여유 있으면 추가

================================================================================
7. 검사 정보 제공
================================================================================
현재 상태: ✅ 85% 완성

【구현 완료】
• 검사 준비사항 모델 (ExamPreparation) ✅
• 사후 관리 지침 (ExamPostCareInstruction) ✅
• 검사별 평균 소요시간/버퍼 시간 ✅
• 체크리스트 UI 컴포넌트 ✅
• 아이콘 기반 시각화 ✅

【미구현】
• 동영상 가이드
• 다국어 지원
• 음성 안내

【결정 필요】
❓ 텍스트 안내만으로 충분한지?
❓ 의료 용어 설명 필요성?

【추천】
✅ 텍스트+아이콘으로 충분
✅ 중요 의료 용어만 툴팁 추가
❌ 동영상은 시간 부족 (제외)

================================================================================
8. 관리자 대시보드
================================================================================
현재 상태: ⚠️ 50% 완성

【구현 완료】
• 기본 UI 레이아웃 ✅
• RBAC 권한별 메뉴 분기 ✅
• 대기열 조회 화면 기본 구조 ✅
• KPI 대시보드 컴포넌트 ✅

【미구현】
• 실시간 모니터링 데이터 연동 ❌
• 환자 호출 시스템 UI ❌
• 통계 차트 실제 데이터 ❌
• 알림/경고 시스템 ❌

【결정 필요】
❓ 얼마나 복잡한 대시보드가 필요한지?
❓ 어떤 통계가 핵심인지?

【추천】
⚠️ 대기열 관리 기능만 완성
⚠️ 통계는 목업 데이터로 시각화만
✅ 실시간 현황판 1개면 충분

================================================================================
9. AI 챗봇
================================================================================
현재 상태: ⚠️ 40% 완성

【구현 완료】
• 기본 질의응답 Flask 서버 ✅
• 의도 분류기 (IntentClassifier) ✅
• 3단계 UI (버튼→퀵메뉴→전체) ✅
• 컨텍스트 관리자 기본 구조 ✅

【미구현】
• 의료 정보 정확한 처리 ❌
• 음성 인식/TTS ❌
• 복잡한 대화 흐름 ❌
• LLM 연동 ❌

【결정 필요】
❓ 챗봇이 핵심 기능인지?
❓ 간단한 FAQ면 충분한지?

【추천】
❌ 시간 부족, 우선순위 낮음
⚠️ 간단한 FAQ 5-10개만 구현
❌ 음성 기능 제외

================================================================================
10. LSTM 예측 시스템
================================================================================
현재 상태: ❌ 20% 완성

【구현 완료】
• 프론트엔드 LSTMPrediction 컴포넌트 ✅
• 시각화 차트 (Recharts) ✅
• 목업 데이터 생성 로직 ✅

【미구현】
• 실제 LSTM 모델 ❌
• 학습 데이터 수집 파이프라인 ❌
• 백엔드 예측 API ❌
• 모델 학습/평가 ❌

【결정 필요】
❓ 한이음에 AI가 필수인지?
❓ 시뮬레이션으로 충분한지?

【추천】
⚠️ 시뮬레이션으로 대체
⚠️ "향후 학습 가능한 구조" 강조
✅ 가상 데이터로 시각화만 구현

================================================================================
11. 가상 EMR 연동
================================================================================
현재 상태: ⚠️ 30% 완성

【구현 완료】
• EmrSyncStatus 모델 ✅
• 가상 DB 구조 설계 ✅
• READ-ONLY 원칙 정의 ✅

【미구현】
• 실제 동기화 로직 ❌
• 주기적 업데이트 스케줄러 ❌
• EMR 상태 → 우리 상태 매핑 ❌

【결정 필요】
❓ 얼마나 현실적으로 시뮬레이션할지?
❓ 동기화 주기는?

【추천】
✅ 시드 데이터 + 60초 타이머
✅ 단순 상태 변경만 시뮬레이션
⚠️ 복잡한 시나리오 제외

================================================================================
12. 알림 시스템
================================================================================
현재 상태: ⚠️ 40% 완성

【구현 완료】
• Notification 모델 ✅
• NotificationSettings 모델 ✅
• FCM 토큰 구조 ✅

【미구현】
• 실제 FCM 푸시 알림 ❌
• 알림 설정 UI ❌
• 알림 히스토리 ❌

【결정 필요】
❓ 푸시 알림 필수인지?
❓ 웹 알림으로 충분한지?

【추천】
❌ FCM 푸시 제외 (시간 부족)
⚠️ 브라우저 알림만 간단히
✅ 화면내 토스트 알림 충분

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 1개월 실행 계획 (3명 기준)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
📅 Week 1 (1/10 - 1/16): 핵심 기능 완성
================================================================================
목표: 환자가 병원 도착 → 검사 완료까지 전체 플로우 동작

【Person A - 백엔드 담당】
월: PatientJourneyService 버그 수정 및 테스트
화: 가상 EMR 동기화 로직 구현 (60초 타이머)
수: WebSocket 재연결 로직 추가
목: 대기열 상태 변경 API 안정화
금: 백엔드 통합 테스트

【Person B - 프론트엔드 담당】
월: 환자 여정 9개 화면 완성
화: NFC 스캔 → 상태 변경 플로우 검증
수: 대기열 실시간 업데이트 안정화
목: 경로 안내 UI 개선
금: 프론트엔드 통합 테스트

【Person C - 통합/테스트 담당】
월: 시드 데이터 생성 (환자 10명, 검사 20종)
화: Mock NFC 태그 30개 설정
수: E2E 테스트 시나리오 작성
목: Cypress 테스트 자동화
금: 1주차 통합 테스트 및 버그 리포트

================================================================================
📅 Week 2 (1/17 - 1/23): 관리자 기능 구현
================================================================================
목표: 간호사가 대기열을 관리할 수 있는 최소 기능

【Person A - 백엔드 담당】
월: 관리자 대기열 조회/수정 API 완성
화: 환자 호출 시스템 백엔드 구현
수: 권한별 API 접근 제어 강화
목: 대시보드용 통계 API 구현
금: 관리자 기능 통합 테스트

【Person B - 프론트엔드 담당】
월: 관리자 로그인 및 권한 분기
화: 대기열 관리 화면 구현
수: 환자 호출 UI 및 알림
목: 실시간 현황판 구현
금: 관리자 대시보드 통합

【Person C - 통합/테스트 담당】
월: 관리자 시나리오 작성
화: 다중 사용자 동시 접속 테스트
수: 관리자-환자 연동 테스트
목: 성능 테스트 (100명 동시)
금: 2주차 통합 테스트

================================================================================
📅 Week 3 (1/24 - 1/30): 안정화 및 UI/UX
================================================================================
목표: 사용성 개선 및 버그 수정

【Person A - 백엔드 담당】
월-화: 주요 버그 수정 (우선순위순)
수: 에러 처리 및 예외 상황 대응
목: 로깅 시스템 구축
금: API 응답 속도 최적화

【Person B - 프론트엔드 담당】
월: UI 일관성 검토 및 수정
화: 고령자 친화 디자인 적용 (글씨 크기, 대비)
수: 반응형 최적화 (모바일/태블릿)
목: 애니메이션 및 전환 효과
금: 접근성 개선 (ARIA, 키보드 네비게이션)

【Person C - 통합/테스트 담당】
월: 사용자 테스트 준비 (시나리오, 설문)
화-수: 실제 사용자 테스트 (5명)
목: 피드백 정리 및 우선순위 결정
금: 중요 피드백 반영

================================================================================
📅 Week 4 (1/31 - 2/6): 시연 준비
================================================================================
목표: 한이음 공모전 발표 준비

【Person A - 백엔드 담당】
월: 시연용 데이터 세트 준비
화: 백업/복구 시스템 구축
수: 발표 자료 기술 부분 작성
목: 시연 리허설 지원
금: 최종 점검 및 백업

【Person B - 프론트엔드 담당】
월: 시연 시나리오별 UI 최종 점검
화: 목업 데이터 보강 (LSTM 등)
수: 발표 자료 디자인 및 스크린샷
목: 시연 영상 녹화
금: 최종 배포 및 테스트

【Person C - 통합/테스트 담당】
월: 시연 스크립트 작성
화: 리허설 진행 (3회)
수: 문서화 (README, API 문서)
목: 발표 자료 최종 검토
금: 시연 환경 세팅 및 최종 확인

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✂️ 선택과 집중: 제외/축소 항목
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
【완전 제외】- 개발하지 않음
================================================================================
❌ 푸시 알림 (FCM)          → 웹 토스트 알림으로 대체
❌ 음성 인식/TTS            → 텍스트 기반만 제공
❌ 카카오/PASS 로그인        → 간편 로그인만 사용
❌ 3D/AR 지도               → 2D SVG 지도만 제공
❌ 다국어 지원              → 한국어만 지원
❌ 동영상 가이드            → 텍스트+이미지만 제공
❌ 복잡한 우선순위 시스템    → 단순 FIFO만 구현
❌ 실제 LSTM 모델           → 시뮬레이션으로 대체

================================================================================
【목업으로 대체】- UI만 구현, 실제 로직 없음
================================================================================
🎭 LSTM 예측 대시보드      → 가상 데이터로 차트만 표시
🎭 AI 챗봇 고급 기능       → 5-10개 FAQ만 하드코딩
🎭 복잡한 통계 대시보드     → 정적 데이터로 차트 표시
🎭 위험도 히트맵           → 고정된 이미지로 대체
🎭 자원 효율성 점수        → 난수 생성으로 표시

================================================================================
【단순화】- 복잡도를 낮춰서 구현
================================================================================
⚠️ 환자 상태: 9단계 → 5단계로 축소
   • CHECK_IN (UNREGISTERED + ARRIVED + REGISTERED)
   • WAITING
   • IN_PROGRESS (CALLED + ONGOING)
   • COMPLETED
   • FINISHED (PAYMENT 포함)

⚠️ WebSocket: 불안정시 10초 Polling으로 자동 전환

⚠️ 경로 안내: 최단 경로만 (접근성/엘리베이터 경로 제외)

⚠️ 대기열: 검사실별 독립 대기열만 (통합 대기열 제외)

⚠️ 알림: 화면내 토스트만 (푸시/SMS 제외)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🏆 핵심 시연 시나리오 (총 5분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
【환자 시나리오】(3분)
================================================================================
1. [0:00] 병원 입구 NFC 태그 스캔
   - Mock NFC Panel 클릭
   - 자동 로그인 (디바이스 UUID)

2. [0:15] 오늘의 검사 일정 확인
   - 3개 검사 표시 (CT, 혈액검사, 심전도)
   - 첫 번째 검사 자동 하이라이트

3. [0:30] 첫 번째 검사실로 경로 안내
   - SVG 지도에 경로 표시
   - 현재 위치 → CT실 애니메이션

4. [1:00] 대기열 등록 및 실시간 확인
   - 자동 대기열 등록
   - "현재 3번째, 약 15분 대기" 표시
   - 실시간 업데이트 (2번째 → 1번째)

5. [1:30] 호출 알림 수신
   - 화면 상단 토스트 알림
   - "CT실에서 호출하셨습니다"

6. [1:45] 검사 진행 상태 표시
   - 상태 변경: WAITING → IN_PROGRESS
   - 예상 소요시간 표시

7. [2:15] 검사 완료 및 다음 검사 안내
   - 자동으로 다음 검사(혈액검사) 안내
   - 새로운 경로 표시

8. [2:45] 모든 검사 완료
   - 3개 검사 모두 완료 체크
   - 수납 안내 화면 표시

================================================================================
【관리자 시나리오】(2분)
================================================================================
1. [0:00] 관리자 대시보드 로그인
   - dept-admin 권한으로 로그인
   - 부서별 메뉴 표시

2. [0:15] 실시간 대기 현황 확인
   - CT실: 5명 대기, 평균 20분
   - 혈액검사실: 3명 대기, 평균 10분
   - 실시간 업데이트 확인

3. [0:45] 환자 호출 및 순번 조정
   - 특정 환자 선택 후 "호출" 버튼
   - 환자 화면에 알림 표시 확인
   - 순번 수동 조정 (3번 → 1번)

4. [1:15] 병목 구간 확인
   - CT실 대기 인원 급증 알림
   - "평균 대기시간 초과" 경고

5. [1:45] 간단한 통계 확인
   - 오늘 처리 환자: 127명
   - 평균 대기시간: 18분
   - 가장 혼잡한 시간: 오후 2-3시

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 성공 전략
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
【Do's】✅ 반드시 해야 할 것
================================================================================
1. 핵심 플로우 완성도에 집중
   - 환자 여정이 끊기지 않고 진행되어야 함
   - 모든 상태 전환이 자연스러워야 함

2. 실제 동작하는 데모 준비
   - Mock 데이터라도 실제처럼 동작
   - 에러 없이 시연 가능한 상태

3. 사용자 관점 강조
   - 환자의 불편함 해결
   - 간호사의 업무 효율화

4. 기술적 안정성 우선
   - 버그 없는 것이 기능 많은 것보다 중요
   - 시연 중 멈추면 안 됨

5. 명확한 역할 분담
   - 각자 책임 영역 명확히
   - 일일 스탠드업 필수

================================================================================
【Don'ts】❌ 하지 말아야 할 것
================================================================================
1. 모든 기능 구현 시도
   - 욕심 부리면 아무것도 못 함
   - 선택과 집중 필수

2. 복잡한 AI 모델 개발
   - LSTM 실제 구현은 시간 낭비
   - 시뮬레이션으로 충분

3. 완벽한 디자인 추구
   - 기능 > 디자인
   - 깔끔한 정도면 충분

4. 실제 병원 연동 고민
   - 가상 환경으로 충분
   - 실제 연동은 범위 밖

5. 확장성만 강조
   - 당장 동작하는 것이 우선
   - 확장은 나중 문제

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📝 최종 권고사항
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 【지금 당장】
   - 팀 회의 소집 (2시간)
   - 이 계획서 검토
   - 역할 분담 확정
   - 1주차 목표 설정

2. 【우선순위】
   1순위: 환자 전체 플로우
   2순위: 대기열 관리
   3순위: 관리자 기능
   4순위: 부가 기능

3. 【일정 관리】
   - 매일 오전 10시: 15분 스탠드업
   - 매주 금요일: 통합 테스트
   - 매주 월요일: 주간 계획 수립

4. 【리스크 관리】
   - WebSocket 불안정 → Polling 백업
   - NFC 미지원 → Mock Panel 사용
   - 시간 부족 → 기능 축소

5. 【문서화】
   - README.md 필수
   - API 문서 최소한
   - 시연 스크립트 준비

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 핵심 메시지
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

"선택과 집중"만이 1개월 내 성공적인 완성을 보장합니다.

한이음 심사위원이 보고 싶어하는 것:
✅ 실제로 동작하는 시스템
✅ 명확한 문제 해결
✅ 혁신적인 아이디어
✅ 완성도 있는 시연

한이음 심사위원이 보고 싶어하지 않는 것:
❌ 미완성 기능 나열
❌ 복잡한 기술 설명
❌ 동작하지 않는 데모
❌ 과도한 미래 계획

================================================================================
작성: Claude Code Assistant
검토: 개발팀 전원 필독
날짜: 2025년 1월 9일
================================================================================